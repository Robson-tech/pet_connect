# Generated by Django 5.0 on 2023-12-10 21:45

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Loja',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('endereco', models.CharField(max_length=100)),
                ('telefone', models.CharField(max_length=20)),
                ('cnpj', models.CharField(max_length=20)),
                ('email', models.CharField(max_length=100)),
                ('available', models.BooleanField(default=True)),
                ('password', models.CharField(max_length=100)),
                ('image', models.ImageField(blank=True, default='pet_image/default.png', upload_to='pet_image')),
            ],
        ),
        migrations.CreateModel(
            name='Promocoes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cod', models.CharField(max_length=100)),
                ('descricao', models.CharField(max_length=500)),
                ('duracao', models.DateTimeField(auto_now_add=True)),
                ('status', models.BooleanField(default=False)),
                ('porcentagem', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('username', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=100, unique=True)),
                ('telefone', models.CharField(max_length=20)),
                ('endereco', models.CharField(max_length=100)),
                ('data_nascimento', models.DateField()),
                ('is_dono', models.BooleanField(default=False)),
                ('image', models.ImageField(blank=True, default='usuario_image/default.png', upload_to='usuario_image')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Animais',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('raca', models.CharField(max_length=100)),
                ('idade', models.IntegerField()),
                ('image', models.ImageField(blank=True, default='animais_image/default.png', upload_to='animais_image')),
                ('id_dono', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Servico',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100)),
                ('descricao', models.CharField(max_length=500)),
                ('preco', models.FloatField()),
                ('id_loja', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='petconnect.loja')),
                ('id_promocao', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='petconnect.promocoes')),
            ],
        ),
        migrations.CreateModel(
            name='Agendamento',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_hora_agendamento', models.DateTimeField()),
                ('data_hora_consulta', models.DateTimeField(auto_now_add=True)),
                ('status', models.BooleanField(default=False)),
                ('desc_problema', models.CharField(max_length=500)),
                ('id_usuario', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('id_animal', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='petconnect.animais')),
                ('id_loja', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='petconnect.loja')),
                ('id_servico', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='petconnect.servico')),
            ],
        ),
    ]
